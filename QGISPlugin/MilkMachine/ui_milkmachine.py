# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Edward\.qgis2\python\plugins\MilkMachine\ui_milkmachine.ui'
#
# Created: Thu Jul 31 19:45:58 2014
#      by: PyQt4 UI code generator 4.10.2
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MilkMachine(object):
    def setupUi(self, MilkMachine):
        MilkMachine.setObjectName(_fromUtf8("MilkMachine"))
        MilkMachine.resize(576, 354)
        self.tabWidget = QtGui.QTabWidget(MilkMachine)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 551, 341))
        self.tabWidget.setTabShape(QtGui.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
        self.tab_import = QtGui.QWidget()
        self.tab_import.setObjectName(_fromUtf8("tab_import"))
        self.pushButton_Audio1info = QtGui.QPushButton(self.tab_import)
        self.pushButton_Audio1info.setEnabled(False)
        self.pushButton_Audio1info.setGeometry(QtCore.QRect(460, 100, 31, 31))
        self.pushButton_Audio1info.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/question.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Audio1info.setIcon(icon)
        self.pushButton_Audio1info.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_Audio1info.setObjectName(_fromUtf8("pushButton_Audio1info"))
        self.buttonImportGPS = QtGui.QPushButton(self.tab_import)
        self.buttonImportGPS.setGeometry(QtCore.QRect(20, 20, 101, 31))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/Import.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonImportGPS.setIcon(icon1)
        self.buttonImportGPS.setObjectName(_fromUtf8("buttonImportGPS"))
        self.label_2 = QtGui.QLabel(self.tab_import)
        self.label_2.setGeometry(QtCore.QRect(381, 133, 81, 16))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.pushButton_clearAudio1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_clearAudio1.setEnabled(False)
        self.pushButton_clearAudio1.setGeometry(QtCore.QRect(420, 100, 31, 31))
        self.pushButton_clearAudio1.setText(_fromUtf8(""))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/delete.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_clearAudio1.setIcon(icon2)
        self.pushButton_clearAudio1.setObjectName(_fromUtf8("pushButton_clearAudio1"))
        self.buttonDrawTrack = QtGui.QPushButton(self.tab_import)
        self.buttonDrawTrack.setEnabled(False)
        self.buttonDrawTrack.setGeometry(QtCore.QRect(20, 60, 101, 31))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/pencil.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonDrawTrack.setIcon(icon3)
        self.buttonDrawTrack.setObjectName(_fromUtf8("buttonDrawTrack"))
        self.lineEdit_ImportGPS = QtGui.QLineEdit(self.tab_import)
        self.lineEdit_ImportGPS.setGeometry(QtCore.QRect(140, 20, 271, 31))
        self.lineEdit_ImportGPS.setAutoFillBackground(False)
        self.lineEdit_ImportGPS.setDragEnabled(True)
        self.lineEdit_ImportGPS.setObjectName(_fromUtf8("lineEdit_ImportGPS"))
        self.pushButton_Audio1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_Audio1.setEnabled(False)
        self.pushButton_Audio1.setGeometry(QtCore.QRect(20, 150, 31, 31))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/play.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Audio1.setIcon(icon4)
        self.pushButton_Audio1.setObjectName(_fromUtf8("pushButton_Audio1"))
        self.lcdNumber_Audio1_C = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_C.setGeometry(QtCore.QRect(100, 150, 131, 31))
        self.lcdNumber_Audio1_C.setSmallDecimalPoint(False)
        self.lcdNumber_Audio1_C.setDigitCount(8)
        self.lcdNumber_Audio1_C.setObjectName(_fromUtf8("lcdNumber_Audio1_C"))
        self.pushButton_stop1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_stop1.setEnabled(False)
        self.pushButton_stop1.setGeometry(QtCore.QRect(60, 150, 31, 31))
        self.pushButton_stop1.setText(_fromUtf8(""))
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/stop.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_stop1.setIcon(icon5)
        self.pushButton_stop1.setObjectName(_fromUtf8("pushButton_stop1"))
        self.label_3 = QtGui.QLabel(self.tab_import)
        self.label_3.setGeometry(QtCore.QRect(260, 133, 111, 16))
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.lcdNumber_Audio1_D = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_D.setGeometry(QtCore.QRect(240, 150, 131, 31))
        self.lcdNumber_Audio1_D.setDigitCount(8)
        self.lcdNumber_Audio1_D.setObjectName(_fromUtf8("lcdNumber_Audio1_D"))
        self.label = QtGui.QLabel(self.tab_import)
        self.label.setGeometry(QtCore.QRect(125, 133, 101, 16))
        self.label.setObjectName(_fromUtf8("label"))
        self.lcdNumber_Audio1_P = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_P.setGeometry(QtCore.QRect(380, 150, 81, 31))
        self.lcdNumber_Audio1_P.setObjectName(_fromUtf8("lcdNumber_Audio1_P"))
        self.buttonImport_audio = QtGui.QPushButton(self.tab_import)
        self.buttonImport_audio.setGeometry(QtCore.QRect(20, 100, 101, 31))
        self.buttonImport_audio.setIcon(icon1)
        self.buttonImport_audio.setObjectName(_fromUtf8("buttonImport_audio"))
        self.lineEdit_InAudio1 = QtGui.QLineEdit(self.tab_import)
        self.lineEdit_InAudio1.setGeometry(QtCore.QRect(140, 99, 271, 31))
        self.lineEdit_InAudio1.setObjectName(_fromUtf8("lineEdit_InAudio1"))
        self.pushButton_sync = QtGui.QPushButton(self.tab_import)
        self.pushButton_sync.setEnabled(False)
        self.pushButton_sync.setGeometry(QtCore.QRect(500, 100, 31, 31))
        self.pushButton_sync.setText(_fromUtf8(""))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/synchronize.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_sync.setIcon(icon6)
        self.pushButton_sync.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_sync.setObjectName(_fromUtf8("pushButton_sync"))
        self.checkBox_headoftrack = QtGui.QCheckBox(self.tab_import)
        self.checkBox_headoftrack.setEnabled(False)
        self.checkBox_headoftrack.setGeometry(QtCore.QRect(140, 68, 131, 17))
        self.checkBox_headoftrack.setObjectName(_fromUtf8("checkBox_headoftrack"))
        self.tabWidget.addTab(self.tab_import, _fromUtf8(""))
        self.tab_export = QtGui.QWidget()
        self.tab_export.setObjectName(_fromUtf8("tab_export"))
        self.buttonExportTrack = QtGui.QPushButton(self.tab_export)
        self.buttonExportTrack.setEnabled(False)
        self.buttonExportTrack.setGeometry(QtCore.QRect(240, 14, 101, 31))
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/Export.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonExportTrack.setIcon(icon7)
        self.buttonExportTrack.setObjectName(_fromUtf8("buttonExportTrack"))
        self.pushButton_TrackInfo = QtGui.QPushButton(self.tab_export)
        self.pushButton_TrackInfo.setEnabled(False)
        self.pushButton_TrackInfo.setGeometry(QtCore.QRect(350, 14, 31, 31))
        self.pushButton_TrackInfo.setText(_fromUtf8(""))
        self.pushButton_TrackInfo.setIcon(icon)
        self.pushButton_TrackInfo.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_TrackInfo.setObjectName(_fromUtf8("pushButton_TrackInfo"))
        self.pushButton_google_earth = QtGui.QPushButton(self.tab_export)
        self.pushButton_google_earth.setEnabled(False)
        self.pushButton_google_earth.setGeometry(QtCore.QRect(390, 14, 31, 31))
        self.pushButton_google_earth.setText(_fromUtf8(""))
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/earth.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_google_earth.setIcon(icon8)
        self.pushButton_google_earth.setIconSize(QtCore.QSize(36, 36))
        self.pushButton_google_earth.setObjectName(_fromUtf8("pushButton_google_earth"))
        self.label_visualization_active_2 = QtGui.QLabel(self.tab_export)
        self.label_visualization_active_2.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active_2.setObjectName(_fromUtf8("label_visualization_active_2"))
        self.lineEdit_export_active = QtGui.QLineEdit(self.tab_export)
        self.lineEdit_export_active.setEnabled(False)
        self.lineEdit_export_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_export_active.setObjectName(_fromUtf8("lineEdit_export_active"))
        self.tabWidget.addTab(self.tab_export, _fromUtf8(""))
        self.tab_visualization = QtGui.QWidget()
        self.tab_visualization.setObjectName(_fromUtf8("tab_visualization"))
        self.label_visualization_active = QtGui.QLabel(self.tab_visualization)
        self.label_visualization_active.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active.setObjectName(_fromUtf8("label_visualization_active"))
        self.lineEdit_visualization_active = QtGui.QLineEdit(self.tab_visualization)
        self.lineEdit_visualization_active.setEnabled(False)
        self.lineEdit_visualization_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_visualization_active.setObjectName(_fromUtf8("lineEdit_visualization_active"))
        self.checkBox_visualization_edit = QtGui.QCheckBox(self.tab_visualization)
        self.checkBox_visualization_edit.setEnabled(False)
        self.checkBox_visualization_edit.setGeometry(QtCore.QRect(240, 21, 111, 16))
        self.checkBox_visualization_edit.setObjectName(_fromUtf8("checkBox_visualization_edit"))
        self.groupBox_2 = QtGui.QGroupBox(self.tab_visualization)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 50, 461, 261))
        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
        self.groupBox_cameraview = QtGui.QGroupBox(self.groupBox_2)
        self.groupBox_cameraview.setGeometry(QtCore.QRect(220, 10, 231, 241))
        self.groupBox_cameraview.setObjectName(_fromUtf8("groupBox_cameraview"))
        self.label_4 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_4.setGeometry(QtCore.QRect(20, 60, 81, 16))
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.label_5 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_5.setGeometry(QtCore.QRect(20, 81, 91, 16))
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.label_6 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_6.setGeometry(QtCore.QRect(20, 102, 91, 16))
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.label_7 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_7.setGeometry(QtCore.QRect(20, 123, 91, 16))
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.label_8 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_8.setGeometry(QtCore.QRect(20, 144, 91, 16))
        self.label_8.setObjectName(_fromUtf8("label_8"))
        self.label_9 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_9.setGeometry(QtCore.QRect(20, 165, 91, 16))
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.label_10 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_10.setGeometry(QtCore.QRect(20, 186, 91, 16))
        self.label_10.setObjectName(_fromUtf8("label_10"))
        self.lineEdit_visualization_camera_altitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_altitude.setEnabled(False)
        self.lineEdit_visualization_camera_altitude.setGeometry(QtCore.QRect(110, 60, 101, 20))
        self.lineEdit_visualization_camera_altitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_altitude"))
        self.lineEdit__visualization_camera_gxhoriz = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_gxhoriz.setEnabled(False)
        self.lineEdit__visualization_camera_gxhoriz.setGeometry(QtCore.QRect(110, 123, 101, 20))
        self.lineEdit__visualization_camera_gxhoriz.setObjectName(_fromUtf8("lineEdit__visualization_camera_gxhoriz"))
        self.lineEdit__visualization_camera_heading = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_heading.setEnabled(False)
        self.lineEdit__visualization_camera_heading.setGeometry(QtCore.QRect(110, 144, 101, 20))
        self.lineEdit__visualization_camera_heading.setObjectName(_fromUtf8("lineEdit__visualization_camera_heading"))
        self.lineEdit__visualization_camera_roll = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_roll.setEnabled(False)
        self.lineEdit__visualization_camera_roll.setGeometry(QtCore.QRect(110, 165, 101, 20))
        self.lineEdit__visualization_camera_roll.setObjectName(_fromUtf8("lineEdit__visualization_camera_roll"))
        self.comboBox_altitudemode = QtGui.QComboBox(self.groupBox_cameraview)
        self.comboBox_altitudemode.setEnabled(False)
        self.comboBox_altitudemode.setGeometry(QtCore.QRect(110, 81, 101, 20))
        self.comboBox_altitudemode.setObjectName(_fromUtf8("comboBox_altitudemode"))
        self.comboBox_gxaltitudemode = QtGui.QComboBox(self.groupBox_cameraview)
        self.comboBox_gxaltitudemode.setEnabled(False)
        self.comboBox_gxaltitudemode.setGeometry(QtCore.QRect(110, 102, 101, 20))
        self.comboBox_gxaltitudemode.setObjectName(_fromUtf8("comboBox_gxaltitudemode"))
        self.pushButton_camera_apply = QtGui.QPushButton(self.groupBox_cameraview)
        self.pushButton_camera_apply.setEnabled(False)
        self.pushButton_camera_apply.setGeometry(QtCore.QRect(130, 210, 61, 23))
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/triangle.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_camera_apply.setIcon(icon9)
        self.pushButton_camera_apply.setObjectName(_fromUtf8("pushButton_camera_apply"))
        self.lineEdit__visualization_camera_tilt = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_tilt.setEnabled(False)
        self.lineEdit__visualization_camera_tilt.setGeometry(QtCore.QRect(110, 186, 101, 20))
        self.lineEdit__visualization_camera_tilt.setObjectName(_fromUtf8("lineEdit__visualization_camera_tilt"))
        self.label_11 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_11.setGeometry(QtCore.QRect(20, 39, 81, 16))
        self.label_11.setObjectName(_fromUtf8("label_11"))
        self.label_12 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_12.setGeometry(QtCore.QRect(20, 18, 81, 16))
        self.label_12.setObjectName(_fromUtf8("label_12"))
        self.lineEdit_visualization_camera_latitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_latitude.setEnabled(False)
        self.lineEdit_visualization_camera_latitude.setGeometry(QtCore.QRect(110, 39, 101, 20))
        self.lineEdit_visualization_camera_latitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_latitude"))
        self.lineEdit_visualization_camera_longitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_longitude.setEnabled(False)
        self.lineEdit_visualization_camera_longitude.setGeometry(QtCore.QRect(110, 18, 101, 20))
        self.lineEdit_visualization_camera_longitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_longitude"))
        self.groupBox = QtGui.QGroupBox(self.groupBox_2)
        self.groupBox.setGeometry(QtCore.QRect(10, 70, 181, 71))
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.label_14 = QtGui.QLabel(self.groupBox)
        self.label_14.setGeometry(QtCore.QRect(10, 20, 61, 20))
        self.label_14.setObjectName(_fromUtf8("label_14"))
        self.label_15 = QtGui.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(10, 41, 51, 20))
        self.label_15.setObjectName(_fromUtf8("label_15"))
        self.comboBox_flyto_mode = QtGui.QComboBox(self.groupBox)
        self.comboBox_flyto_mode.setEnabled(False)
        self.comboBox_flyto_mode.setGeometry(QtCore.QRect(80, 20, 91, 20))
        self.comboBox_flyto_mode.setObjectName(_fromUtf8("comboBox_flyto_mode"))
        self.lineEdit_flyto_duration = QtGui.QLineEdit(self.groupBox)
        self.lineEdit_flyto_duration.setEnabled(False)
        self.lineEdit_flyto_duration.setGeometry(QtCore.QRect(80, 41, 91, 20))
        self.lineEdit_flyto_duration.setObjectName(_fromUtf8("lineEdit_flyto_duration"))
        self.lineEdit_tourname = QtGui.QLineEdit(self.groupBox_2)
        self.lineEdit_tourname.setEnabled(False)
        self.lineEdit_tourname.setGeometry(QtCore.QRect(90, 30, 91, 20))
        self.lineEdit_tourname.setObjectName(_fromUtf8("lineEdit_tourname"))
        self.label_13 = QtGui.QLabel(self.groupBox_2)
        self.label_13.setGeometry(QtCore.QRect(20, 30, 61, 20))
        self.label_13.setObjectName(_fromUtf8("label_13"))
        self.tabWidget.addTab(self.tab_visualization, _fromUtf8(""))
        self.tab_rendering = QtGui.QWidget()
        self.tab_rendering.setObjectName(_fromUtf8("tab_rendering"))
        self.lineEdit_rendering_active = QtGui.QLineEdit(self.tab_rendering)
        self.lineEdit_rendering_active.setEnabled(False)
        self.lineEdit_rendering_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_rendering_active.setObjectName(_fromUtf8("lineEdit_rendering_active"))
        self.label_visualization_active_3 = QtGui.QLabel(self.tab_rendering)
        self.label_visualization_active_3.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active_3.setObjectName(_fromUtf8("label_visualization_active_3"))
        self.checkBox_rendering_edit = QtGui.QCheckBox(self.tab_rendering)
        self.checkBox_rendering_edit.setEnabled(False)
        self.checkBox_rendering_edit.setGeometry(QtCore.QRect(240, 21, 111, 16))
        self.checkBox_rendering_edit.setObjectName(_fromUtf8("checkBox_rendering_edit"))
        self.groupBox_3 = QtGui.QGroupBox(self.tab_rendering)
        self.groupBox_3.setGeometry(QtCore.QRect(20, 60, 231, 101))
        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
        self.label_17 = QtGui.QLabel(self.groupBox_3)
        self.label_17.setGeometry(QtCore.QRect(20, 41, 91, 20))
        self.label_17.setObjectName(_fromUtf8("label_17"))
        self.label_16 = QtGui.QLabel(self.groupBox_3)
        self.label_16.setGeometry(QtCore.QRect(20, 20, 81, 20))
        self.label_16.setObjectName(_fromUtf8("label_16"))
        self.lineEdit_visualization_camera_altitude_2 = QtGui.QLineEdit(self.groupBox_3)
        self.lineEdit_visualization_camera_altitude_2.setEnabled(False)
        self.lineEdit_visualization_camera_altitude_2.setGeometry(QtCore.QRect(100, 20, 101, 20))
        self.lineEdit_visualization_camera_altitude_2.setObjectName(_fromUtf8("lineEdit_visualization_camera_altitude_2"))
        self.comboBox_altitudemode_2 = QtGui.QComboBox(self.groupBox_3)
        self.comboBox_altitudemode_2.setEnabled(False)
        self.comboBox_altitudemode_2.setGeometry(QtCore.QRect(100, 41, 101, 20))
        self.comboBox_altitudemode_2.setObjectName(_fromUtf8("comboBox_altitudemode_2"))
        self.lineEdit__visualization_camera_heading_2 = QtGui.QLineEdit(self.groupBox_3)
        self.lineEdit__visualization_camera_heading_2.setEnabled(False)
        self.lineEdit__visualization_camera_heading_2.setGeometry(QtCore.QRect(100, 62, 101, 20))
        self.lineEdit__visualization_camera_heading_2.setObjectName(_fromUtf8("lineEdit__visualization_camera_heading_2"))
        self.label_18 = QtGui.QLabel(self.groupBox_3)
        self.label_18.setGeometry(QtCore.QRect(20, 62, 91, 20))
        self.label_18.setObjectName(_fromUtf8("label_18"))
        self.tabWidget.addTab(self.tab_rendering, _fromUtf8(""))
        self.tab = QtGui.QWidget()
        self.tab.setObjectName(_fromUtf8("tab"))
        self.txtFeedback = QtGui.QTextEdit(self.tab)
        self.txtFeedback.setEnabled(False)
        self.txtFeedback.setGeometry(QtCore.QRect(90, 90, 171, 31))
        self.txtFeedback.setObjectName(_fromUtf8("txtFeedback"))
        self.chkActivate = QtGui.QCheckBox(self.tab)
        self.chkActivate.setEnabled(False)
        self.chkActivate.setGeometry(QtCore.QRect(150, 40, 171, 31))
        self.chkActivate.setObjectName(_fromUtf8("chkActivate"))
        self.comboBox_export = QtGui.QComboBox(self.tab)
        self.comboBox_export.setEnabled(False)
        self.comboBox_export.setGeometry(QtCore.QRect(70, 190, 271, 31))
        self.comboBox_export.setObjectName(_fromUtf8("comboBox_export"))
        self.buttonboxOkCancel = QtGui.QDialogButtonBox(self.tab)
        self.buttonboxOkCancel.setEnabled(False)
        self.buttonboxOkCancel.setGeometry(QtCore.QRect(80, 140, 171, 32))
        self.buttonboxOkCancel.setOrientation(QtCore.Qt.Horizontal)
        self.buttonboxOkCancel.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Ok)
        self.buttonboxOkCancel.setObjectName(_fromUtf8("buttonboxOkCancel"))
        self.tabWidget.addTab(self.tab, _fromUtf8(""))

        self.retranslateUi(MilkMachine)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QObject.connect(self.buttonboxOkCancel, QtCore.SIGNAL(_fromUtf8("accepted()")), MilkMachine.accept)
        QtCore.QObject.connect(self.buttonboxOkCancel, QtCore.SIGNAL(_fromUtf8("rejected()")), MilkMachine.reject)
        QtCore.QMetaObject.connectSlotsByName(MilkMachine)
        MilkMachine.setTabOrder(self.tabWidget, self.buttonImportGPS)
        MilkMachine.setTabOrder(self.buttonImportGPS, self.lineEdit_ImportGPS)
        MilkMachine.setTabOrder(self.lineEdit_ImportGPS, self.buttonDrawTrack)
        MilkMachine.setTabOrder(self.buttonDrawTrack, self.checkBox_headoftrack)
        MilkMachine.setTabOrder(self.checkBox_headoftrack, self.buttonImport_audio)
        MilkMachine.setTabOrder(self.buttonImport_audio, self.lineEdit_InAudio1)
        MilkMachine.setTabOrder(self.lineEdit_InAudio1, self.pushButton_clearAudio1)
        MilkMachine.setTabOrder(self.pushButton_clearAudio1, self.pushButton_Audio1info)
        MilkMachine.setTabOrder(self.pushButton_Audio1info, self.pushButton_sync)
        MilkMachine.setTabOrder(self.pushButton_sync, self.pushButton_Audio1)
        MilkMachine.setTabOrder(self.pushButton_Audio1, self.pushButton_stop1)
        MilkMachine.setTabOrder(self.pushButton_stop1, self.lineEdit_export_active)
        MilkMachine.setTabOrder(self.lineEdit_export_active, self.buttonExportTrack)
        MilkMachine.setTabOrder(self.buttonExportTrack, self.pushButton_TrackInfo)
        MilkMachine.setTabOrder(self.pushButton_TrackInfo, self.pushButton_google_earth)
        MilkMachine.setTabOrder(self.pushButton_google_earth, self.lineEdit_visualization_active)
        MilkMachine.setTabOrder(self.lineEdit_visualization_active, self.checkBox_visualization_edit)
        MilkMachine.setTabOrder(self.checkBox_visualization_edit, self.lineEdit_tourname)
        MilkMachine.setTabOrder(self.lineEdit_tourname, self.comboBox_flyto_mode)
        MilkMachine.setTabOrder(self.comboBox_flyto_mode, self.lineEdit_flyto_duration)
        MilkMachine.setTabOrder(self.lineEdit_flyto_duration, self.lineEdit_visualization_camera_longitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_longitude, self.lineEdit_visualization_camera_latitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_latitude, self.lineEdit_visualization_camera_altitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_altitude, self.comboBox_altitudemode)
        MilkMachine.setTabOrder(self.comboBox_altitudemode, self.comboBox_gxaltitudemode)
        MilkMachine.setTabOrder(self.comboBox_gxaltitudemode, self.lineEdit__visualization_camera_gxhoriz)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_gxhoriz, self.lineEdit__visualization_camera_heading)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_heading, self.lineEdit__visualization_camera_roll)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_roll, self.lineEdit__visualization_camera_tilt)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_tilt, self.pushButton_camera_apply)
        MilkMachine.setTabOrder(self.pushButton_camera_apply, self.chkActivate)
        MilkMachine.setTabOrder(self.chkActivate, self.txtFeedback)
        MilkMachine.setTabOrder(self.txtFeedback, self.buttonboxOkCancel)
        MilkMachine.setTabOrder(self.buttonboxOkCancel, self.comboBox_export)

    def retranslateUi(self, MilkMachine):
        MilkMachine.setWindowTitle(_translate("MilkMachine", "MilkMachine", None))
        self.pushButton_Audio1info.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Click for information about the current audio track</p></body></html>", None))
        self.buttonImportGPS.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Browse to .gpx file. This will convert the .gpx to a .kml, then import the kml. Additionally, a GeoJSON file will also be created in the same directory.</p></body></html>", None))
        self.buttonImportGPS.setText(_translate("MilkMachine", "Import GPS", None))
        self.label_2.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Feature ID (FID) number. For point data layers, this is a automatic number that is generated by QGIS to indicate sequential point number from the &quot;starting point&quot; of the track. The numbering starts at 0</p></body></html>", None))
        self.label_2.setText(_translate("MilkMachine", "Feature ID (FID)", None))
        self.pushButton_clearAudio1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Clear the audio input box</p></body></html>", None))
        self.buttonDrawTrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Draw the imported GPS track on the map. This will draw the .kml file that was imported (above) as a &quot;shapefile&quot; with the same name as the .kml. Two shapefiles will be produced from the original .kml; 1) one with the same name as the .kml which is rendered on the map and added to the table of contents, 2) another with &quot;_duplicate&quot; appended to the name, just to have a backup copy of the original.</p></body></html>", None))
        self.buttonDrawTrack.setText(_translate("MilkMachine", "Draw Track", None))
        self.lineEdit_ImportGPS.setToolTip(_translate("MilkMachine", "Raw GPS input file (from GPS unit)", None))
        self.pushButton_Audio1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>After selecting a point in the GPS track that matches the .WAV audio file, click play. The VLC media player will launch, starting at the time within the audio file that matches the time within the point file. </p></body></html>", None))
        self.lcdNumber_Audio1_C.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The clock time stamp on the audio file.</p></body></html>", None))
        self.pushButton_stop1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Stops and closes the VLC media player and audio file</p></body></html>", None))
        self.label_3.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The duration into the audio file that is currently playing.</p></body></html>", None))
        self.label_3.setText(_translate("MilkMachine", "Duration Into Audio", None))
        self.lcdNumber_Audio1_D.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The duration into the audio file that is currently playing.</p></body></html>", None))
        self.label.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The clock time stamp on the audio file.</p></body></html>", None))
        self.label.setText(_translate("MilkMachine", "Audio Clock Time", None))
        self.lcdNumber_Audio1_P.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Feature ID (FID) number. For point data layers, this is a automatic number that is generated by QGIS to indicate sequential point number from the &quot;starting point&quot; of the track. The numbering starts at 0</p></body></html>", None))
        self.buttonImport_audio.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Browse to the .wav file that matches one of the GPS tracks in the table of contents. Once the .wav file is imported, select the point in the track (using the select tool) where the audio file should start to play.</p></body></html>", None))
        self.buttonImport_audio.setText(_translate("MilkMachine", "Import Audio 1", None))
        self.pushButton_sync.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Syncronize the audio with the GPS track. Press the button while a track is selected that matches the audio file and a marker will be produced that shows where the audio starts in the GPS track.<br/></p></body></html>", None))
        self.checkBox_headoftrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>If checked, a green marker is drawn when the &quot;Draw Track&quot; button is pressed to indicate where the track starts.</p></body></html>", None))
        self.checkBox_headoftrack.setText(_translate("MilkMachine", "Draw \"Head of Track\"", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_import), _translate("MilkMachine", "Import and Sync", None))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_import), _translate("MilkMachine", "<html><head/><body><p>Import raw .kml files and render as an ESRI shapefile for editing, and import audio files for interactive time syncronization.</p></body></html>", None))
        self.buttonExportTrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Export the selected track to .kml. If the active track is an ESRI shapefile point layer, the user will be able to export.</p></body></html>", None))
        self.buttonExportTrack.setText(_translate("MilkMachine", "Export Track", None))
        self.pushButton_TrackInfo.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Click for information about the current audio track</p></body></html>", None))
        self.pushButton_google_earth.setToolTip(_translate("MilkMachine", "<html><head/><body><p>View selected track in Google Earth</p></body></html>", None))
        self.label_visualization_active_2.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_export), _translate("MilkMachine", "Export and Details", None))
        self.label_visualization_active.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.checkBox_visualization_edit.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Checking this box will enable the &quot;Camera&quot; fields for editing. The user must select a layer in the table of contents, have editing &quot;on&quot;, and have at least one selected point.</p></body></html>", None))
        self.checkBox_visualization_edit.setText(_translate("MilkMachine", "Edit Visualization", None))
        self.groupBox_2.setTitle(_translate("MilkMachine", "KML Tour", None))
        self.groupBox_cameraview.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Introduced with KML 2.2, <span style=\" font-family:\'Courier New,courier\';\">&lt;Camera&gt;</span> provides an additional way to specify the observer\'s viewpoint and associated view parameters. <span style=\" font-family:\'Courier New,courier\';\">&lt;Camera&gt;</span> is similar to <span style=\" font-family:\'Courier New,courier\';\">&lt;LookAt&gt;</span>, since both elements define the placement and orientation of a virtual camera that is viewing the Earth. The difference is that LookAt specifies the view in terms of the point of interest that is being viewed. Camera, in contrast, specifies the view in terms of the viewer\'s position and orientation. </p></body></html>", None))
        self.groupBox_cameraview.setTitle(_translate("MilkMachine", "Camera", None))
        self.label_4.setText(_translate("MilkMachine", "altitude:", None))
        self.label_5.setText(_translate("MilkMachine", "altitudemode:", None))
        self.label_6.setText(_translate("MilkMachine", "gxaltitudemode:", None))
        self.label_7.setText(_translate("MilkMachine", "gxhorizfov:", None))
        self.label_8.setText(_translate("MilkMachine", "heading:", None))
        self.label_9.setText(_translate("MilkMachine", "roll:", None))
        self.label_10.setText(_translate("MilkMachine", "tilt:", None))
        self.lineEdit_visualization_camera_altitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Distance of the camera from the earth\'s surface, in meters. Interpreted according to the Camera\'s &lt;altitudeMode&gt; or &lt;gx:altitudeMode&gt;.</p></body></html>", None))
        self.lineEdit__visualization_camera_gxhoriz.setToolTip(_translate("MilkMachine", "Rotation about the x axis. <float>", None))
        self.lineEdit__visualization_camera_heading.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Direction (azimuth) of the camera, in degrees. Default=0 (true North). (<a href=\"https://developers.google.com/kml/documentation/kmlreference#headingdiagram\"><span style=\" text-decoration: underline; color:#0000ff;\">See diagram</span></a>.) Values range from 0 to 360 degrees. </p></body></html>", None))
        self.lineEdit__visualization_camera_roll.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Rotation, in degrees, of the camera around the Z axis. Values range from −180 to +180 degrees. </p></body></html>", None))
        self.comboBox_altitudemode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Specifies how the &lt;altitude&gt; specified for the Camera is interpreted. Possible values are as follows: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">relativeToGround</span> - (default) Interprets the &lt;altitude&gt; as a value in meters above the ground. If the point is over water, the &lt;altitude&gt; will be interpreted as a value in meters above sea level. See <a href=\"https://developers.google.com/kml/documentation/kmlreference#gxaltitudemode\"><span style=\" text-decoration: underline; color:#0000ff;\">&lt;gx:altitudeMode&gt;</span></a> below to specify points relative to the sea floor. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">clampToGround </span>- For a camera, this setting also places the camera <span style=\" font-weight:600;\">relativeToGround</span>, since putting the camera exactly at terrain height would mean that the eye would intersect the terrain (and the view would be blocked). </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">absolute </span>- Interprets the &lt;altitude&gt; as a value in meters above sea level. </li></ul></body></html>", None))
        self.comboBox_gxaltitudemode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>A KML extension in the <a href=\"https://developers.google.com/kml/documentation/kmlreference#kmlextensions\"><span style=\" text-decoration: underline; color:#0000ff;\">Google extension namespace</span></a>, allowing altitudes relative to the sea floor. Values are: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">relativeToSeaFloor</span> - Interprets the &lt;altitude&gt; as a value in meters above the sea floor. If the point is above land rather than sea, the &lt;altitude&gt; will be interpreted as being above the ground. </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">clampToSeaFloor</span> - The &lt;altitude&gt; specification is ignored, and the Camera will be positioned on the sea floor. If the point is on land rather than at sea, the Camera will be positioned on the ground. </li></ul><p><br/></p></body></html>", None))
        self.pushButton_camera_apply.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Apply the camera view changes to the selected points in the active layer. To roll back these edits, select &quot;Cancel for selected layer&quot; in the editor options.</p></body></html>", None))
        self.pushButton_camera_apply.setText(_translate("MilkMachine", "Apply", None))
        self.lineEdit__visualization_camera_tilt.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Rotation, in degrees, of the camera around the <span style=\" font-style:italic;\">X</span> axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for &lt;tilt&gt; indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for &lt;tilt&gt; are clamped at +180 degrees. </p></body></html>", None))
        self.label_11.setText(_translate("MilkMachine", "latitude:", None))
        self.label_12.setText(_translate("MilkMachine", "longitude:", None))
        self.lineEdit_visualization_camera_latitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Latitude of the virtual camera. Degrees north or south of the Equator (0 degrees). Values range from −90 degrees to 90 degrees.</p></body></html>", None))
        self.lineEdit_visualization_camera_longitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Longitude of the virtual camera (eye point). Angular distance in degrees, relative to the Prime Meridian. Values west of the Meridian range from −180 to 0 degrees. Values east of the Meridian range from 0 to 180 degrees.</p></body></html>", None))
        self.groupBox.setTitle(_translate("MilkMachine", "FlyTo", None))
        self.label_14.setText(_translate("MilkMachine", "flyToMode:", None))
        self.label_15.setText(_translate("MilkMachine", "duration:", None))
        self.label_13.setText(_translate("MilkMachine", "Tour Name:", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_visualization), _translate("MilkMachine", "Visualization", None))
        self.label_visualization_active_3.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.checkBox_rendering_edit.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Checking this box will enable the &quot;Camera&quot; fields for editing. The user must select a layer in the table of contents, have editing &quot;on&quot;, and have at least one selected point.</p></body></html>", None))
        self.checkBox_rendering_edit.setText(_translate("MilkMachine", "Edit Point Style", None))
        self.groupBox_3.setTitle(_translate("MilkMachine", "Label Style", None))
        self.label_17.setText(_translate("MilkMachine", "colormode:", None))
        self.label_16.setText(_translate("MilkMachine", "color:", None))
        self.lineEdit_visualization_camera_altitude_2.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Distance of the camera from the earth\'s surface, in meters. Interpreted according to the Camera\'s &lt;altitudeMode&gt; or &lt;gx:altitudeMode&gt;.</p></body></html>", None))
        self.comboBox_altitudemode_2.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Specifies how the &lt;altitude&gt; specified for the Camera is interpreted. Possible values are as follows: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">relativeToGround</span> - (default) Interprets the &lt;altitude&gt; as a value in meters above the ground. If the point is over water, the &lt;altitude&gt; will be interpreted as a value in meters above sea level. See <a href=\"https://developers.google.com/kml/documentation/kmlreference#gxaltitudemode\"><span style=\" text-decoration: underline; color:#0000ff;\">&lt;gx:altitudeMode&gt;</span></a> below to specify points relative to the sea floor. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">clampToGround </span>- For a camera, this setting also places the camera <span style=\" font-weight:600;\">relativeToGround</span>, since putting the camera exactly at terrain height would mean that the eye would intersect the terrain (and the view would be blocked). </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">absolute </span>- Interprets the &lt;altitude&gt; as a value in meters above sea level. </li></ul></body></html>", None))
        self.lineEdit__visualization_camera_heading_2.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Direction (azimuth) of the camera, in degrees. Default=0 (true North). (<a href=\"https://developers.google.com/kml/documentation/kmlreference#headingdiagram\"><span style=\" text-decoration: underline; color:#0000ff;\">See diagram</span></a>.) Values range from 0 to 360 degrees. </p></body></html>", None))
        self.label_18.setText(_translate("MilkMachine", "scale:", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_rendering), _translate("MilkMachine", "Rendering", None))
        self.chkActivate.setText(_translate("MilkMachine", "Activate\n"
"(check)", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MilkMachine", "Development", None))

import resources_rc
