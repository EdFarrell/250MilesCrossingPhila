# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\Edward\.qgis2\python\plugins\MilkMachine\ui_milkmachine.ui'
#
# Created: Wed Aug 13 20:51:43 2014
#      by: PyQt4 UI code generator 4.10.2
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MilkMachine(object):
    def setupUi(self, MilkMachine):
        MilkMachine.setObjectName(_fromUtf8("MilkMachine"))
        MilkMachine.resize(592, 354)
        self.tabWidget = QtGui.QTabWidget(MilkMachine)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(10, 10, 581, 341))
        font = QtGui.QFont()
        font.setPointSize(8)
        self.tabWidget.setFont(font)
        self.tabWidget.setAcceptDrops(False)
        self.tabWidget.setTabShape(QtGui.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setObjectName(_fromUtf8("tabWidget"))
        self.tab_import = QtGui.QWidget()
        self.tab_import.setObjectName(_fromUtf8("tab_import"))
        self.pushButton_Audio1info = QtGui.QPushButton(self.tab_import)
        self.pushButton_Audio1info.setEnabled(False)
        self.pushButton_Audio1info.setGeometry(QtCore.QRect(460, 100, 31, 30))
        self.pushButton_Audio1info.setText(_fromUtf8(""))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/question.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Audio1info.setIcon(icon)
        self.pushButton_Audio1info.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_Audio1info.setObjectName(_fromUtf8("pushButton_Audio1info"))
        self.buttonImportGPS = QtGui.QPushButton(self.tab_import)
        self.buttonImportGPS.setGeometry(QtCore.QRect(20, 20, 101, 30))
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/Import.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonImportGPS.setIcon(icon1)
        self.buttonImportGPS.setObjectName(_fromUtf8("buttonImportGPS"))
        self.label_2 = QtGui.QLabel(self.tab_import)
        self.label_2.setGeometry(QtCore.QRect(381, 133, 91, 16))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.pushButton_clearAudio1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_clearAudio1.setEnabled(False)
        self.pushButton_clearAudio1.setGeometry(QtCore.QRect(420, 100, 31, 30))
        self.pushButton_clearAudio1.setText(_fromUtf8(""))
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/delete.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_clearAudio1.setIcon(icon2)
        self.pushButton_clearAudio1.setObjectName(_fromUtf8("pushButton_clearAudio1"))
        self.buttonDrawTrack = QtGui.QPushButton(self.tab_import)
        self.buttonDrawTrack.setEnabled(False)
        self.buttonDrawTrack.setGeometry(QtCore.QRect(20, 60, 101, 30))
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/pencil.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonDrawTrack.setIcon(icon3)
        self.buttonDrawTrack.setObjectName(_fromUtf8("buttonDrawTrack"))
        self.lineEdit_ImportGPS = QtGui.QLineEdit(self.tab_import)
        self.lineEdit_ImportGPS.setGeometry(QtCore.QRect(140, 20, 271, 30))
        self.lineEdit_ImportGPS.setAutoFillBackground(False)
        self.lineEdit_ImportGPS.setDragEnabled(True)
        self.lineEdit_ImportGPS.setObjectName(_fromUtf8("lineEdit_ImportGPS"))
        self.pushButton_Audio1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_Audio1.setEnabled(False)
        self.pushButton_Audio1.setGeometry(QtCore.QRect(20, 150, 31, 30))
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/play.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_Audio1.setIcon(icon4)
        self.pushButton_Audio1.setObjectName(_fromUtf8("pushButton_Audio1"))
        self.lcdNumber_Audio1_C = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_C.setGeometry(QtCore.QRect(100, 150, 131, 30))
        self.lcdNumber_Audio1_C.setSmallDecimalPoint(False)
        self.lcdNumber_Audio1_C.setDigitCount(8)
        self.lcdNumber_Audio1_C.setObjectName(_fromUtf8("lcdNumber_Audio1_C"))
        self.pushButton_stop1 = QtGui.QPushButton(self.tab_import)
        self.pushButton_stop1.setEnabled(False)
        self.pushButton_stop1.setGeometry(QtCore.QRect(60, 150, 31, 30))
        self.pushButton_stop1.setText(_fromUtf8(""))
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/stop.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_stop1.setIcon(icon5)
        self.pushButton_stop1.setObjectName(_fromUtf8("pushButton_stop1"))
        self.label_3 = QtGui.QLabel(self.tab_import)
        self.label_3.setGeometry(QtCore.QRect(260, 133, 111, 16))
        self.label_3.setObjectName(_fromUtf8("label_3"))
        self.lcdNumber_Audio1_D = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_D.setGeometry(QtCore.QRect(240, 150, 131, 30))
        self.lcdNumber_Audio1_D.setDigitCount(8)
        self.lcdNumber_Audio1_D.setObjectName(_fromUtf8("lcdNumber_Audio1_D"))
        self.label = QtGui.QLabel(self.tab_import)
        self.label.setGeometry(QtCore.QRect(125, 133, 101, 16))
        self.label.setObjectName(_fromUtf8("label"))
        self.lcdNumber_Audio1_P = QtGui.QLCDNumber(self.tab_import)
        self.lcdNumber_Audio1_P.setGeometry(QtCore.QRect(380, 150, 81, 30))
        self.lcdNumber_Audio1_P.setObjectName(_fromUtf8("lcdNumber_Audio1_P"))
        self.buttonImport_audio = QtGui.QPushButton(self.tab_import)
        self.buttonImport_audio.setGeometry(QtCore.QRect(20, 100, 101, 30))
        self.buttonImport_audio.setIcon(icon1)
        self.buttonImport_audio.setObjectName(_fromUtf8("buttonImport_audio"))
        self.lineEdit_InAudio1 = QtGui.QLineEdit(self.tab_import)
        self.lineEdit_InAudio1.setGeometry(QtCore.QRect(140, 99, 271, 30))
        self.lineEdit_InAudio1.setObjectName(_fromUtf8("lineEdit_InAudio1"))
        self.pushButton_sync = QtGui.QPushButton(self.tab_import)
        self.pushButton_sync.setEnabled(False)
        self.pushButton_sync.setGeometry(QtCore.QRect(500, 100, 31, 30))
        self.pushButton_sync.setText(_fromUtf8(""))
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/synchronize.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_sync.setIcon(icon6)
        self.pushButton_sync.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_sync.setObjectName(_fromUtf8("pushButton_sync"))
        self.checkBox_headoftrack = QtGui.QCheckBox(self.tab_import)
        self.checkBox_headoftrack.setEnabled(False)
        self.checkBox_headoftrack.setGeometry(QtCore.QRect(140, 60, 131, 30))
        self.checkBox_headoftrack.setObjectName(_fromUtf8("checkBox_headoftrack"))
        self.tabWidget.addTab(self.tab_import, _fromUtf8(""))
        self.tab_rendering = QtGui.QWidget()
        self.tab_rendering.setObjectName(_fromUtf8("tab_rendering"))
        self.lineEdit_rendering_active = QtGui.QLineEdit(self.tab_rendering)
        self.lineEdit_rendering_active.setEnabled(False)
        self.lineEdit_rendering_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_rendering_active.setObjectName(_fromUtf8("lineEdit_rendering_active"))
        self.label_visualization_active_3 = QtGui.QLabel(self.tab_rendering)
        self.label_visualization_active_3.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active_3.setObjectName(_fromUtf8("label_visualization_active_3"))
        self.checkBox_rendering_edit = QtGui.QCheckBox(self.tab_rendering)
        self.checkBox_rendering_edit.setEnabled(False)
        self.checkBox_rendering_edit.setGeometry(QtCore.QRect(240, 21, 111, 16))
        self.checkBox_rendering_edit.setObjectName(_fromUtf8("checkBox_rendering_edit"))
        self.groupBox_3 = QtGui.QGroupBox(self.tab_rendering)
        self.groupBox_3.setGeometry(QtCore.QRect(203, 50, 184, 121))
        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
        self.label_17 = QtGui.QLabel(self.groupBox_3)
        self.label_17.setGeometry(QtCore.QRect(13, 41, 61, 20))
        self.label_17.setObjectName(_fromUtf8("label_17"))
        self.label_16 = QtGui.QLabel(self.groupBox_3)
        self.label_16.setGeometry(QtCore.QRect(13, 20, 41, 20))
        self.label_16.setObjectName(_fromUtf8("label_16"))
        self.comboBox_rendering_label_colormode = QtGui.QComboBox(self.groupBox_3)
        self.comboBox_rendering_label_colormode.setEnabled(False)
        self.comboBox_rendering_label_colormode.setGeometry(QtCore.QRect(76, 41, 101, 20))
        self.comboBox_rendering_label_colormode.setObjectName(_fromUtf8("comboBox_rendering_label_colormode"))
        self.lineEdit_rendering_label_scale = QtGui.QLineEdit(self.groupBox_3)
        self.lineEdit_rendering_label_scale.setEnabled(False)
        self.lineEdit_rendering_label_scale.setGeometry(QtCore.QRect(76, 62, 101, 20))
        self.lineEdit_rendering_label_scale.setObjectName(_fromUtf8("lineEdit_rendering_label_scale"))
        self.label_18 = QtGui.QLabel(self.groupBox_3)
        self.label_18.setGeometry(QtCore.QRect(13, 62, 41, 20))
        self.label_18.setObjectName(_fromUtf8("label_18"))
        self.pushButton_rendering_label_apply = QtGui.QPushButton(self.groupBox_3)
        self.pushButton_rendering_label_apply.setEnabled(False)
        self.pushButton_rendering_label_apply.setGeometry(QtCore.QRect(76, 90, 61, 23))
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/triangle.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_rendering_label_apply.setIcon(icon7)
        self.pushButton_rendering_label_apply.setObjectName(_fromUtf8("pushButton_rendering_label_apply"))
        self.comboBox_rendering_label_color = QtGui.QComboBox(self.groupBox_3)
        self.comboBox_rendering_label_color.setEnabled(False)
        self.comboBox_rendering_label_color.setGeometry(QtCore.QRect(76, 20, 101, 20))
        self.comboBox_rendering_label_color.setObjectName(_fromUtf8("comboBox_rendering_label_color"))
        self.groupBox_4 = QtGui.QGroupBox(self.tab_rendering)
        self.groupBox_4.setGeometry(QtCore.QRect(5, 50, 193, 251))
        self.groupBox_4.setObjectName(_fromUtf8("groupBox_4"))
        self.comboBox_rendering_icon_colormode = QtGui.QComboBox(self.groupBox_4)
        self.comboBox_rendering_icon_colormode.setEnabled(False)
        self.comboBox_rendering_icon_colormode.setGeometry(QtCore.QRect(85, 62, 101, 20))
        self.comboBox_rendering_icon_colormode.setObjectName(_fromUtf8("comboBox_rendering_icon_colormode"))
        self.label_19 = QtGui.QLabel(self.groupBox_4)
        self.label_19.setGeometry(QtCore.QRect(10, 62, 61, 20))
        self.label_19.setObjectName(_fromUtf8("label_19"))
        self.label_20 = QtGui.QLabel(self.groupBox_4)
        self.label_20.setGeometry(QtCore.QRect(10, 20, 61, 20))
        self.label_20.setObjectName(_fromUtf8("label_20"))
        self.lineEdit_rendering_icon_scale = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_rendering_icon_scale.setEnabled(False)
        self.lineEdit_rendering_icon_scale.setGeometry(QtCore.QRect(85, 83, 101, 20))
        self.lineEdit_rendering_icon_scale.setObjectName(_fromUtf8("lineEdit_rendering_icon_scale"))
        self.label_21 = QtGui.QLabel(self.groupBox_4)
        self.label_21.setGeometry(QtCore.QRect(10, 83, 41, 20))
        self.label_21.setObjectName(_fromUtf8("label_21"))
        self.label_22 = QtGui.QLabel(self.groupBox_4)
        self.label_22.setGeometry(QtCore.QRect(10, 104, 51, 20))
        self.label_22.setObjectName(_fromUtf8("label_22"))
        self.lineEdit_rendering_icon_heading = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_rendering_icon_heading.setEnabled(False)
        self.lineEdit_rendering_icon_heading.setGeometry(QtCore.QRect(85, 104, 101, 20))
        self.lineEdit_rendering_icon_heading.setObjectName(_fromUtf8("lineEdit_rendering_icon_heading"))
        self.label_23 = QtGui.QLabel(self.groupBox_4)
        self.label_23.setGeometry(QtCore.QRect(10, 125, 31, 20))
        self.label_23.setObjectName(_fromUtf8("label_23"))
        self.lineEdit_rendering_icon_icon = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_rendering_icon_icon.setEnabled(False)
        self.lineEdit_rendering_icon_icon.setGeometry(QtCore.QRect(85, 125, 101, 20))
        self.lineEdit_rendering_icon_icon.setObjectName(_fromUtf8("lineEdit_rendering_icon_icon"))
        self.label_24 = QtGui.QLabel(self.groupBox_4)
        self.label_24.setGeometry(QtCore.QRect(10, 146, 51, 20))
        self.label_24.setObjectName(_fromUtf8("label_24"))
        self.lineEdit_rendering_icon_hotspot = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_rendering_icon_hotspot.setEnabled(False)
        self.lineEdit_rendering_icon_hotspot.setGeometry(QtCore.QRect(85, 146, 101, 20))
        self.lineEdit_rendering_icon_hotspot.setObjectName(_fromUtf8("lineEdit_rendering_icon_hotspot"))
        self.pushButton_rendering_icon_apply = QtGui.QPushButton(self.groupBox_4)
        self.pushButton_rendering_icon_apply.setEnabled(False)
        self.pushButton_rendering_icon_apply.setGeometry(QtCore.QRect(85, 220, 61, 23))
        self.pushButton_rendering_icon_apply.setIcon(icon7)
        self.pushButton_rendering_icon_apply.setObjectName(_fromUtf8("pushButton_rendering_icon_apply"))
        self.label_25 = QtGui.QLabel(self.groupBox_4)
        self.label_25.setGeometry(QtCore.QRect(10, 41, 71, 20))
        self.label_25.setObjectName(_fromUtf8("label_25"))
        self.lineEdit_rendering_icon_transparency = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_rendering_icon_transparency.setEnabled(False)
        self.lineEdit_rendering_icon_transparency.setGeometry(QtCore.QRect(85, 41, 101, 20))
        self.lineEdit_rendering_icon_transparency.setObjectName(_fromUtf8("lineEdit_rendering_icon_transparency"))
        self.comboBox_rendering_icon_color = QtGui.QComboBox(self.groupBox_4)
        self.comboBox_rendering_icon_color.setEnabled(False)
        self.comboBox_rendering_icon_color.setGeometry(QtCore.QRect(85, 20, 101, 20))
        self.comboBox_rendering_icon_color.setObjectName(_fromUtf8("comboBox_rendering_icon_color"))
        self.groupBox_5 = QtGui.QGroupBox(self.tab_rendering)
        self.groupBox_5.setGeometry(QtCore.QRect(393, 50, 171, 201))
        self.groupBox_5.setObjectName(_fromUtf8("groupBox_5"))
        self.lineEdit_rendering_model_link = QtGui.QLineEdit(self.groupBox_5)
        self.lineEdit_rendering_model_link.setEnabled(False)
        self.lineEdit_rendering_model_link.setGeometry(QtCore.QRect(63, 20, 71, 20))
        self.lineEdit_rendering_model_link.setObjectName(_fromUtf8("lineEdit_rendering_model_link"))
        self.label_26 = QtGui.QLabel(self.groupBox_5)
        self.label_26.setGeometry(QtCore.QRect(10, 20, 51, 20))
        self.label_26.setObjectName(_fromUtf8("label_26"))
        self.label_27 = QtGui.QLabel(self.groupBox_5)
        self.label_27.setGeometry(QtCore.QRect(10, 41, 51, 20))
        self.label_27.setObjectName(_fromUtf8("label_27"))
        self.label_28 = QtGui.QLabel(self.groupBox_5)
        self.label_28.setGeometry(QtCore.QRect(10, 62, 51, 20))
        self.label_28.setObjectName(_fromUtf8("label_28"))
        self.label_29 = QtGui.QLabel(self.groupBox_5)
        self.label_29.setGeometry(QtCore.QRect(10, 83, 51, 20))
        self.label_29.setObjectName(_fromUtf8("label_29"))
        self.lineEdit_rendering_model_longitude = QtGui.QLineEdit(self.groupBox_5)
        self.lineEdit_rendering_model_longitude.setEnabled(False)
        self.lineEdit_rendering_model_longitude.setGeometry(QtCore.QRect(63, 41, 71, 20))
        self.lineEdit_rendering_model_longitude.setObjectName(_fromUtf8("lineEdit_rendering_model_longitude"))
        self.lineEdit_rendering_model_latitude = QtGui.QLineEdit(self.groupBox_5)
        self.lineEdit_rendering_model_latitude.setEnabled(False)
        self.lineEdit_rendering_model_latitude.setGeometry(QtCore.QRect(63, 62, 71, 20))
        self.lineEdit_rendering_model_latitude.setObjectName(_fromUtf8("lineEdit_rendering_model_latitude"))
        self.lineEdit_rendering_model_altitude = QtGui.QLineEdit(self.groupBox_5)
        self.lineEdit_rendering_model_altitude.setEnabled(False)
        self.lineEdit_rendering_model_altitude.setGeometry(QtCore.QRect(63, 83, 71, 20))
        self.lineEdit_rendering_model_altitude.setObjectName(_fromUtf8("lineEdit_rendering_model_altitude"))
        self.lineEdit_rendering_model_scale = QtGui.QLineEdit(self.groupBox_5)
        self.lineEdit_rendering_model_scale.setEnabled(False)
        self.lineEdit_rendering_model_scale.setGeometry(QtCore.QRect(63, 104, 101, 20))
        self.lineEdit_rendering_model_scale.setObjectName(_fromUtf8("lineEdit_rendering_model_scale"))
        self.label_30 = QtGui.QLabel(self.groupBox_5)
        self.label_30.setGeometry(QtCore.QRect(10, 104, 51, 20))
        self.label_30.setObjectName(_fromUtf8("label_30"))
        self.pushButton_rendering_model_apply = QtGui.QPushButton(self.groupBox_5)
        self.pushButton_rendering_model_apply.setEnabled(False)
        self.pushButton_rendering_model_apply.setGeometry(QtCore.QRect(63, 140, 61, 23))
        self.pushButton_rendering_model_apply.setIcon(icon7)
        self.pushButton_rendering_model_apply.setObjectName(_fromUtf8("pushButton_rendering_model_apply"))
        self.pushButton_rendering_model_file = QtGui.QPushButton(self.groupBox_5)
        self.pushButton_rendering_model_file.setEnabled(False)
        self.pushButton_rendering_model_file.setGeometry(QtCore.QRect(140, 20, 20, 20))
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/folder.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_rendering_model_file.setIcon(icon8)
        self.pushButton_rendering_model_file.setObjectName(_fromUtf8("pushButton_rendering_model_file"))
        self.pushButton_rendering_model_xy = QtGui.QPushButton(self.groupBox_5)
        self.pushButton_rendering_model_xy.setEnabled(False)
        self.pushButton_rendering_model_xy.setGeometry(QtCore.QRect(140, 50, 20, 20))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.pushButton_rendering_model_xy.setFont(font)
        self.pushButton_rendering_model_xy.setObjectName(_fromUtf8("pushButton_rendering_model_xy"))
        self.checkBox_rendering_model_z = QtGui.QCheckBox(self.groupBox_5)
        self.checkBox_rendering_model_z.setEnabled(False)
        self.checkBox_rendering_model_z.setGeometry(QtCore.QRect(140, 83, 31, 20))
        self.checkBox_rendering_model_z.setChecked(True)
        self.checkBox_rendering_model_z.setObjectName(_fromUtf8("checkBox_rendering_model_z"))
        self.tabWidget.addTab(self.tab_rendering, _fromUtf8(""))
        self.tab_visualization = QtGui.QWidget()
        self.tab_visualization.setObjectName(_fromUtf8("tab_visualization"))
        self.label_visualization_active = QtGui.QLabel(self.tab_visualization)
        self.label_visualization_active.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active.setObjectName(_fromUtf8("label_visualization_active"))
        self.lineEdit_visualization_active = QtGui.QLineEdit(self.tab_visualization)
        self.lineEdit_visualization_active.setEnabled(False)
        self.lineEdit_visualization_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_visualization_active.setObjectName(_fromUtf8("lineEdit_visualization_active"))
        self.checkBox_visualization_edit = QtGui.QCheckBox(self.tab_visualization)
        self.checkBox_visualization_edit.setEnabled(False)
        self.checkBox_visualization_edit.setGeometry(QtCore.QRect(240, 21, 111, 16))
        self.checkBox_visualization_edit.setObjectName(_fromUtf8("checkBox_visualization_edit"))
        self.groupBox_2 = QtGui.QGroupBox(self.tab_visualization)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 50, 551, 261))
        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
        self.groupBox_cameraview = QtGui.QGroupBox(self.groupBox_2)
        self.groupBox_cameraview.setGeometry(QtCore.QRect(220, 10, 311, 211))
        self.groupBox_cameraview.setObjectName(_fromUtf8("groupBox_cameraview"))
        self.label_4 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_4.setGeometry(QtCore.QRect(20, 60, 81, 16))
        self.label_4.setObjectName(_fromUtf8("label_4"))
        self.label_5 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_5.setGeometry(QtCore.QRect(20, 81, 91, 16))
        self.label_5.setObjectName(_fromUtf8("label_5"))
        self.label_6 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_6.setGeometry(QtCore.QRect(20, 102, 91, 16))
        self.label_6.setObjectName(_fromUtf8("label_6"))
        self.label_7 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_7.setGeometry(QtCore.QRect(20, 123, 91, 16))
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.label_8 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_8.setGeometry(QtCore.QRect(20, 144, 91, 16))
        self.label_8.setObjectName(_fromUtf8("label_8"))
        self.label_9 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_9.setGeometry(QtCore.QRect(20, 165, 91, 16))
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.label_10 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_10.setGeometry(QtCore.QRect(20, 186, 91, 16))
        self.label_10.setObjectName(_fromUtf8("label_10"))
        self.lineEdit_visualization_camera_altitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_altitude.setEnabled(False)
        self.lineEdit_visualization_camera_altitude.setGeometry(QtCore.QRect(110, 60, 101, 20))
        self.lineEdit_visualization_camera_altitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_altitude"))
        self.lineEdit__visualization_camera_gxhoriz = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_gxhoriz.setEnabled(False)
        self.lineEdit__visualization_camera_gxhoriz.setGeometry(QtCore.QRect(110, 123, 101, 20))
        self.lineEdit__visualization_camera_gxhoriz.setObjectName(_fromUtf8("lineEdit__visualization_camera_gxhoriz"))
        self.lineEdit__visualization_camera_heading = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_heading.setEnabled(False)
        self.lineEdit__visualization_camera_heading.setGeometry(QtCore.QRect(110, 144, 101, 20))
        self.lineEdit__visualization_camera_heading.setObjectName(_fromUtf8("lineEdit__visualization_camera_heading"))
        self.lineEdit__visualization_camera_roll = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_roll.setEnabled(False)
        self.lineEdit__visualization_camera_roll.setGeometry(QtCore.QRect(110, 165, 101, 20))
        self.lineEdit__visualization_camera_roll.setObjectName(_fromUtf8("lineEdit__visualization_camera_roll"))
        self.comboBox_altitudemode = QtGui.QComboBox(self.groupBox_cameraview)
        self.comboBox_altitudemode.setEnabled(False)
        self.comboBox_altitudemode.setGeometry(QtCore.QRect(110, 81, 101, 20))
        self.comboBox_altitudemode.setObjectName(_fromUtf8("comboBox_altitudemode"))
        self.comboBox_gxaltitudemode = QtGui.QComboBox(self.groupBox_cameraview)
        self.comboBox_gxaltitudemode.setEnabled(False)
        self.comboBox_gxaltitudemode.setGeometry(QtCore.QRect(110, 102, 101, 20))
        self.comboBox_gxaltitudemode.setObjectName(_fromUtf8("comboBox_gxaltitudemode"))
        self.lineEdit__visualization_camera_tilt = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit__visualization_camera_tilt.setEnabled(False)
        self.lineEdit__visualization_camera_tilt.setGeometry(QtCore.QRect(110, 186, 101, 20))
        self.lineEdit__visualization_camera_tilt.setObjectName(_fromUtf8("lineEdit__visualization_camera_tilt"))
        self.label_11 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_11.setGeometry(QtCore.QRect(20, 39, 81, 16))
        self.label_11.setObjectName(_fromUtf8("label_11"))
        self.label_12 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_12.setGeometry(QtCore.QRect(20, 18, 81, 16))
        self.label_12.setObjectName(_fromUtf8("label_12"))
        self.lineEdit_visualization_camera_latitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_latitude.setEnabled(False)
        self.lineEdit_visualization_camera_latitude.setGeometry(QtCore.QRect(110, 39, 77, 20))
        self.lineEdit_visualization_camera_latitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_latitude"))
        self.lineEdit_visualization_camera_longitude = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_longitude.setEnabled(False)
        self.lineEdit_visualization_camera_longitude.setGeometry(QtCore.QRect(110, 18, 77, 20))
        self.lineEdit_visualization_camera_longitude.setObjectName(_fromUtf8("lineEdit_visualization_camera_longitude"))
        self.pushButton_visualization_camera_xy = QtGui.QPushButton(self.groupBox_cameraview)
        self.pushButton_visualization_camera_xy.setEnabled(False)
        self.pushButton_visualization_camera_xy.setGeometry(QtCore.QRect(260, 30, 20, 20))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.pushButton_visualization_camera_xy.setFont(font)
        self.pushButton_visualization_camera_xy.setObjectName(_fromUtf8("pushButton_visualization_camera_xy"))
        self.lineEdit_visualization_camera_longitude_off = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_longitude_off.setEnabled(False)
        self.lineEdit_visualization_camera_longitude_off.setGeometry(QtCore.QRect(220, 18, 31, 20))
        self.lineEdit_visualization_camera_longitude_off.setObjectName(_fromUtf8("lineEdit_visualization_camera_longitude_off"))
        self.lineEdit_visualization_camera_latitude_off = QtGui.QLineEdit(self.groupBox_cameraview)
        self.lineEdit_visualization_camera_latitude_off.setEnabled(False)
        self.lineEdit_visualization_camera_latitude_off.setGeometry(QtCore.QRect(220, 39, 31, 20))
        self.lineEdit_visualization_camera_latitude_off.setObjectName(_fromUtf8("lineEdit_visualization_camera_latitude_off"))
        self.label_31 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_31.setGeometry(QtCore.QRect(200, 20, 20, 20))
        self.label_31.setObjectName(_fromUtf8("label_31"))
        self.label_32 = QtGui.QLabel(self.groupBox_cameraview)
        self.label_32.setGeometry(QtCore.QRect(200, 39, 20, 20))
        self.label_32.setObjectName(_fromUtf8("label_32"))
        self.groupBox = QtGui.QGroupBox(self.groupBox_2)
        self.groupBox.setGeometry(QtCore.QRect(10, 70, 181, 71))
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.label_14 = QtGui.QLabel(self.groupBox)
        self.label_14.setGeometry(QtCore.QRect(10, 20, 61, 20))
        self.label_14.setObjectName(_fromUtf8("label_14"))
        self.label_15 = QtGui.QLabel(self.groupBox)
        self.label_15.setGeometry(QtCore.QRect(10, 41, 51, 20))
        self.label_15.setObjectName(_fromUtf8("label_15"))
        self.comboBox_flyto_mode = QtGui.QComboBox(self.groupBox)
        self.comboBox_flyto_mode.setEnabled(False)
        self.comboBox_flyto_mode.setGeometry(QtCore.QRect(80, 20, 91, 20))
        self.comboBox_flyto_mode.setObjectName(_fromUtf8("comboBox_flyto_mode"))
        self.lineEdit_flyto_duration = QtGui.QLineEdit(self.groupBox)
        self.lineEdit_flyto_duration.setEnabled(False)
        self.lineEdit_flyto_duration.setGeometry(QtCore.QRect(80, 41, 91, 20))
        self.lineEdit_flyto_duration.setObjectName(_fromUtf8("lineEdit_flyto_duration"))
        self.lineEdit_tourname = QtGui.QLineEdit(self.groupBox_2)
        self.lineEdit_tourname.setEnabled(False)
        self.lineEdit_tourname.setGeometry(QtCore.QRect(90, 30, 91, 20))
        self.lineEdit_tourname.setObjectName(_fromUtf8("lineEdit_tourname"))
        self.label_13 = QtGui.QLabel(self.groupBox_2)
        self.label_13.setGeometry(QtCore.QRect(20, 30, 61, 20))
        self.label_13.setObjectName(_fromUtf8("label_13"))
        self.pushButton_camera_apply = QtGui.QPushButton(self.groupBox_2)
        self.pushButton_camera_apply.setEnabled(False)
        self.pushButton_camera_apply.setGeometry(QtCore.QRect(60, 180, 61, 23))
        self.pushButton_camera_apply.setIcon(icon7)
        self.pushButton_camera_apply.setObjectName(_fromUtf8("pushButton_camera_apply"))
        self.tabWidget.addTab(self.tab_visualization, _fromUtf8(""))
        self.tab_export = QtGui.QWidget()
        self.tab_export.setObjectName(_fromUtf8("tab_export"))
        self.buttonExportTrack = QtGui.QPushButton(self.tab_export)
        self.buttonExportTrack.setEnabled(False)
        self.buttonExportTrack.setGeometry(QtCore.QRect(240, 14, 101, 30))
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/Export.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonExportTrack.setIcon(icon9)
        self.buttonExportTrack.setObjectName(_fromUtf8("buttonExportTrack"))
        self.pushButton_TrackInfo = QtGui.QPushButton(self.tab_export)
        self.pushButton_TrackInfo.setEnabled(False)
        self.pushButton_TrackInfo.setGeometry(QtCore.QRect(350, 14, 31, 30))
        self.pushButton_TrackInfo.setText(_fromUtf8(""))
        self.pushButton_TrackInfo.setIcon(icon)
        self.pushButton_TrackInfo.setIconSize(QtCore.QSize(24, 24))
        self.pushButton_TrackInfo.setObjectName(_fromUtf8("pushButton_TrackInfo"))
        self.pushButton_google_earth = QtGui.QPushButton(self.tab_export)
        self.pushButton_google_earth.setEnabled(False)
        self.pushButton_google_earth.setGeometry(QtCore.QRect(390, 14, 31, 30))
        self.pushButton_google_earth.setText(_fromUtf8(""))
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(_fromUtf8(":/plugins/milkmachine/earth.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_google_earth.setIcon(icon10)
        self.pushButton_google_earth.setIconSize(QtCore.QSize(36, 36))
        self.pushButton_google_earth.setObjectName(_fromUtf8("pushButton_google_earth"))
        self.label_visualization_active_2 = QtGui.QLabel(self.tab_export)
        self.label_visualization_active_2.setGeometry(QtCore.QRect(20, 20, 81, 16))
        self.label_visualization_active_2.setObjectName(_fromUtf8("label_visualization_active_2"))
        self.lineEdit_export_active = QtGui.QLineEdit(self.tab_export)
        self.lineEdit_export_active.setEnabled(False)
        self.lineEdit_export_active.setGeometry(QtCore.QRect(90, 18, 131, 20))
        self.lineEdit_export_active.setObjectName(_fromUtf8("lineEdit_export_active"))
        self.tabWidget.addTab(self.tab_export, _fromUtf8(""))
        self.tab = QtGui.QWidget()
        self.tab.setObjectName(_fromUtf8("tab"))
        self.txtFeedback = QtGui.QTextEdit(self.tab)
        self.txtFeedback.setEnabled(False)
        self.txtFeedback.setGeometry(QtCore.QRect(90, 90, 171, 31))
        self.txtFeedback.setObjectName(_fromUtf8("txtFeedback"))
        self.chkActivate = QtGui.QCheckBox(self.tab)
        self.chkActivate.setEnabled(False)
        self.chkActivate.setGeometry(QtCore.QRect(150, 40, 171, 31))
        self.chkActivate.setObjectName(_fromUtf8("chkActivate"))
        self.comboBox_export = QtGui.QComboBox(self.tab)
        self.comboBox_export.setEnabled(False)
        self.comboBox_export.setGeometry(QtCore.QRect(70, 190, 271, 31))
        self.comboBox_export.setObjectName(_fromUtf8("comboBox_export"))
        self.buttonboxOkCancel = QtGui.QDialogButtonBox(self.tab)
        self.buttonboxOkCancel.setEnabled(False)
        self.buttonboxOkCancel.setGeometry(QtCore.QRect(80, 140, 171, 32))
        self.buttonboxOkCancel.setOrientation(QtCore.Qt.Horizontal)
        self.buttonboxOkCancel.setStandardButtons(QtGui.QDialogButtonBox.Cancel|QtGui.QDialogButtonBox.Ok)
        self.buttonboxOkCancel.setObjectName(_fromUtf8("buttonboxOkCancel"))
        self.tabWidget.addTab(self.tab, _fromUtf8(""))

        self.retranslateUi(MilkMachine)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QObject.connect(self.buttonboxOkCancel, QtCore.SIGNAL(_fromUtf8("accepted()")), MilkMachine.accept)
        QtCore.QObject.connect(self.buttonboxOkCancel, QtCore.SIGNAL(_fromUtf8("rejected()")), MilkMachine.reject)
        QtCore.QMetaObject.connectSlotsByName(MilkMachine)
        MilkMachine.setTabOrder(self.tabWidget, self.buttonImportGPS)
        MilkMachine.setTabOrder(self.buttonImportGPS, self.lineEdit_ImportGPS)
        MilkMachine.setTabOrder(self.lineEdit_ImportGPS, self.buttonDrawTrack)
        MilkMachine.setTabOrder(self.buttonDrawTrack, self.checkBox_headoftrack)
        MilkMachine.setTabOrder(self.checkBox_headoftrack, self.buttonImport_audio)
        MilkMachine.setTabOrder(self.buttonImport_audio, self.lineEdit_InAudio1)
        MilkMachine.setTabOrder(self.lineEdit_InAudio1, self.pushButton_clearAudio1)
        MilkMachine.setTabOrder(self.pushButton_clearAudio1, self.pushButton_Audio1info)
        MilkMachine.setTabOrder(self.pushButton_Audio1info, self.pushButton_sync)
        MilkMachine.setTabOrder(self.pushButton_sync, self.pushButton_Audio1)
        MilkMachine.setTabOrder(self.pushButton_Audio1, self.pushButton_stop1)
        MilkMachine.setTabOrder(self.pushButton_stop1, self.lineEdit_rendering_active)
        MilkMachine.setTabOrder(self.lineEdit_rendering_active, self.checkBox_rendering_edit)
        MilkMachine.setTabOrder(self.checkBox_rendering_edit, self.comboBox_rendering_icon_color)
        MilkMachine.setTabOrder(self.comboBox_rendering_icon_color, self.lineEdit_rendering_icon_transparency)
        MilkMachine.setTabOrder(self.lineEdit_rendering_icon_transparency, self.comboBox_rendering_icon_colormode)
        MilkMachine.setTabOrder(self.comboBox_rendering_icon_colormode, self.lineEdit_rendering_icon_scale)
        MilkMachine.setTabOrder(self.lineEdit_rendering_icon_scale, self.lineEdit_rendering_icon_heading)
        MilkMachine.setTabOrder(self.lineEdit_rendering_icon_heading, self.lineEdit_rendering_icon_icon)
        MilkMachine.setTabOrder(self.lineEdit_rendering_icon_icon, self.lineEdit_rendering_icon_hotspot)
        MilkMachine.setTabOrder(self.lineEdit_rendering_icon_hotspot, self.pushButton_rendering_icon_apply)
        MilkMachine.setTabOrder(self.pushButton_rendering_icon_apply, self.comboBox_rendering_label_color)
        MilkMachine.setTabOrder(self.comboBox_rendering_label_color, self.comboBox_rendering_label_colormode)
        MilkMachine.setTabOrder(self.comboBox_rendering_label_colormode, self.lineEdit_rendering_label_scale)
        MilkMachine.setTabOrder(self.lineEdit_rendering_label_scale, self.pushButton_rendering_label_apply)
        MilkMachine.setTabOrder(self.pushButton_rendering_label_apply, self.lineEdit_rendering_model_link)
        MilkMachine.setTabOrder(self.lineEdit_rendering_model_link, self.lineEdit_rendering_model_longitude)
        MilkMachine.setTabOrder(self.lineEdit_rendering_model_longitude, self.lineEdit_rendering_model_latitude)
        MilkMachine.setTabOrder(self.lineEdit_rendering_model_latitude, self.lineEdit_rendering_model_altitude)
        MilkMachine.setTabOrder(self.lineEdit_rendering_model_altitude, self.lineEdit_rendering_model_scale)
        MilkMachine.setTabOrder(self.lineEdit_rendering_model_scale, self.pushButton_rendering_model_apply)
        MilkMachine.setTabOrder(self.pushButton_rendering_model_apply, self.pushButton_rendering_model_file)
        MilkMachine.setTabOrder(self.pushButton_rendering_model_file, self.lineEdit_visualization_active)
        MilkMachine.setTabOrder(self.lineEdit_visualization_active, self.checkBox_visualization_edit)
        MilkMachine.setTabOrder(self.checkBox_visualization_edit, self.lineEdit_tourname)
        MilkMachine.setTabOrder(self.lineEdit_tourname, self.comboBox_flyto_mode)
        MilkMachine.setTabOrder(self.comboBox_flyto_mode, self.lineEdit_flyto_duration)
        MilkMachine.setTabOrder(self.lineEdit_flyto_duration, self.lineEdit_visualization_camera_longitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_longitude, self.lineEdit_visualization_camera_latitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_latitude, self.lineEdit_visualization_camera_altitude)
        MilkMachine.setTabOrder(self.lineEdit_visualization_camera_altitude, self.comboBox_altitudemode)
        MilkMachine.setTabOrder(self.comboBox_altitudemode, self.comboBox_gxaltitudemode)
        MilkMachine.setTabOrder(self.comboBox_gxaltitudemode, self.lineEdit__visualization_camera_gxhoriz)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_gxhoriz, self.lineEdit__visualization_camera_heading)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_heading, self.lineEdit__visualization_camera_roll)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_roll, self.lineEdit__visualization_camera_tilt)
        MilkMachine.setTabOrder(self.lineEdit__visualization_camera_tilt, self.pushButton_camera_apply)
        MilkMachine.setTabOrder(self.pushButton_camera_apply, self.lineEdit_export_active)
        MilkMachine.setTabOrder(self.lineEdit_export_active, self.buttonExportTrack)
        MilkMachine.setTabOrder(self.buttonExportTrack, self.pushButton_TrackInfo)
        MilkMachine.setTabOrder(self.pushButton_TrackInfo, self.pushButton_google_earth)
        MilkMachine.setTabOrder(self.pushButton_google_earth, self.chkActivate)
        MilkMachine.setTabOrder(self.chkActivate, self.txtFeedback)
        MilkMachine.setTabOrder(self.txtFeedback, self.buttonboxOkCancel)
        MilkMachine.setTabOrder(self.buttonboxOkCancel, self.comboBox_export)

    def retranslateUi(self, MilkMachine):
        MilkMachine.setWindowTitle(_translate("MilkMachine", "MilkMachine", None))
        self.pushButton_Audio1info.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Click for information about the current audio track</p></body></html>", None))
        self.buttonImportGPS.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Browse to .gpx file. This will convert the .gpx to a .kml, then import the kml. Additionally, a GeoJSON file will also be created in the same directory.</p></body></html>", None))
        self.buttonImportGPS.setText(_translate("MilkMachine", "Import GPS", None))
        self.label_2.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Feature ID (FID) number. For point data layers, this is a automatic number that is generated by QGIS to indicate sequential point number from the &quot;starting point&quot; of the track. The numbering starts at 0</p></body></html>", None))
        self.label_2.setText(_translate("MilkMachine", "Feature ID (FID)", None))
        self.pushButton_clearAudio1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Clear the audio input box</p></body></html>", None))
        self.buttonDrawTrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Draw the imported GPS track on the map. This will draw the .kml file that was imported (above) as a &quot;shapefile&quot; with the same name as the .kml. Two shapefiles will be produced from the original .kml; 1) one with the same name as the .kml which is rendered on the map and added to the table of contents, 2) another with &quot;_duplicate&quot; appended to the name, just to have a backup copy of the original.</p></body></html>", None))
        self.buttonDrawTrack.setText(_translate("MilkMachine", "Draw Track", None))
        self.lineEdit_ImportGPS.setToolTip(_translate("MilkMachine", "Raw GPS input file (from GPS unit)", None))
        self.pushButton_Audio1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>After selecting a point in the GPS track that matches the .WAV audio file, click play. The VLC media player will launch, starting at the time within the audio file that matches the time within the point file. </p></body></html>", None))
        self.lcdNumber_Audio1_C.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The clock time stamp on the audio file.</p></body></html>", None))
        self.pushButton_stop1.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Stops and closes the VLC media player and audio file</p></body></html>", None))
        self.label_3.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The duration into the audio file that is currently playing.</p></body></html>", None))
        self.label_3.setText(_translate("MilkMachine", "Duration Into Audio", None))
        self.lcdNumber_Audio1_D.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The duration into the audio file that is currently playing.</p></body></html>", None))
        self.label.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The clock time stamp on the audio file.</p></body></html>", None))
        self.label.setText(_translate("MilkMachine", "Audio Clock Time", None))
        self.lcdNumber_Audio1_P.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Feature ID (FID) number. For point data layers, this is a automatic number that is generated by QGIS to indicate sequential point number from the &quot;starting point&quot; of the track. The numbering starts at 0</p></body></html>", None))
        self.buttonImport_audio.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Browse to the .wav file that matches one of the GPS tracks in the table of contents. Once the .wav file is imported, select the point in the track (using the select tool) where the audio file should start to play.</p></body></html>", None))
        self.buttonImport_audio.setText(_translate("MilkMachine", "Import Audio 1", None))
        self.pushButton_sync.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Syncronize the audio with the GPS track. Press the button while a track is selected that matches the audio file and a marker will be produced that shows where the audio starts in the GPS track.<br/></p></body></html>", None))
        self.checkBox_headoftrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>If checked, a green marker is drawn when the &quot;Draw Track&quot; button is pressed to indicate where the track starts.</p></body></html>", None))
        self.checkBox_headoftrack.setText(_translate("MilkMachine", "Draw \"Head of Track\"", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_import), _translate("MilkMachine", "Import and Sync", None))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.tab_import), _translate("MilkMachine", "<html><head/><body><p>Import raw .kml files and render as an ESRI shapefile for editing, and import audio files for interactive time syncronization.</p></body></html>", None))
        self.lineEdit_rendering_active.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The selected layer in the table of contents.</p></body></html>", None))
        self.label_visualization_active_3.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.checkBox_rendering_edit.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Checking this box will enable the &quot;Icon Style&quot; and &quot;Label Style&quot; fields for editing. The user must select a layer in the table of contents, have editing &quot;on&quot;, and have at least point selected. Styling icons and labels can be done independently.</p></body></html>", None))
        self.checkBox_rendering_edit.setText(_translate("MilkMachine", "Edit Points", None))
        self.groupBox_3.setTitle(_translate("MilkMachine", "Label Style", None))
        self.label_17.setText(_translate("MilkMachine", "colormode:", None))
        self.label_16.setText(_translate("MilkMachine", "color:", None))
        self.comboBox_rendering_label_colormode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Values for &lt;colorMode&gt; are <span style=\" font-weight:600;\">normal</span> (no effect) and <span style=\" font-weight:600;\">random</span>. A value of <span style=\" font-weight:600;\">random</span> applies a random linear scale to the base &lt;color&gt; as follows. </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To achieve a truly random selection of colors, specify a base &lt;color&gt; of white (ffffffff). </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you specify a single color component (for example, a value of ff0000ff for <span style=\" font-style:italic;\">red</span>), random color values for that one component (red) will be selected. In this case, the values would range from 00 (<span style=\" font-style:italic;\">black</span>) to ff (<span style=\" font-style:italic;\">full red</span>). </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you specify values for two or for all three color components, a random linear scale is applied to each color component, with results ranging from black to the maximum values specified for each component.</li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The opacity of a color comes from the alpha component of &lt;color&gt; and is never randomized. </li></ul></body></html>", None))
        self.lineEdit_rendering_label_scale.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Resize the icon by the scale value. Default is 1. For example, if scale is 5 the icon will be 5x larger than normal.</p></body></html>", None))
        self.lineEdit_rendering_label_scale.setText(_translate("MilkMachine", "0", None))
        self.label_18.setText(_translate("MilkMachine", "scale:", None))
        self.pushButton_rendering_label_apply.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Apply the label style changes to the selected points in the active layer. To roll back these edits, select &quot;Cancel for selected layer&quot; in the editor options.</p></body></html>", None))
        self.pushButton_rendering_label_apply.setText(_translate("MilkMachine", "Apply", None))
        self.comboBox_rendering_label_color.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Choose a color from the dropdown list. Milk Machine will translate this into hexidecimal for kml.</p></body></html>", None))
        self.groupBox_4.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Specifies how icons for point Placemarks are drawn, both in the Places panel and in the 3D viewer of Google Earth. The &lt;Icon&gt; element specifies the icon image. The &lt;scale&gt; element specifies the <span style=\" font-style:italic;\">x, y</span> scaling of the icon. The color specified in the &lt;color&gt; element of &lt;IconStyle&gt; is blended with the color of the &lt;Icon&gt;.</p></body></html>", None))
        self.groupBox_4.setTitle(_translate("MilkMachine", "Icon Style", None))
        self.comboBox_rendering_icon_colormode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Values for &lt;colorMode&gt; are <span style=\" font-weight:600;\">normal</span> (no effect) and <span style=\" font-weight:600;\">random</span>. A value of <span style=\" font-weight:600;\">random</span> applies a random linear scale to the base &lt;color&gt; as follows. </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">To achieve a truly random selection of colors, specify a base &lt;color&gt; of white (ffffffff). </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you specify a single color component (for example, a value of ff0000ff for <span style=\" font-style:italic;\">red</span>), random color values for that one component (red) will be selected. In this case, the values would range from 00 (<span style=\" font-style:italic;\">black</span>) to ff (<span style=\" font-style:italic;\">full red</span>). </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">If you specify values for two or for all three color components, a random linear scale is applied to each color component, with results ranging from black to the maximum values specified for each component.</li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">The opacity of a color comes from the alpha component of &lt;color&gt; and is never randomized. </li></ul></body></html>", None))
        self.label_19.setText(_translate("MilkMachine", "colormode:", None))
        self.label_20.setText(_translate("MilkMachine", "color:", None))
        self.lineEdit_rendering_icon_scale.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Resize the icon by the scale value. Default is 1. For example, if scale is 5 the icon will be 5x larger than normal.</p></body></html>", None))
        self.lineEdit_rendering_icon_scale.setText(_translate("MilkMachine", "1", None))
        self.label_21.setText(_translate("MilkMachine", "scale:", None))
        self.label_22.setText(_translate("MilkMachine", "heading:", None))
        self.lineEdit_rendering_icon_heading.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Direction (<span style=\" font-style:italic;\">e.g.</span> North, South, East, West), in degrees. Default=0 (North).Values range from 0 to 360 degrees.</p></body></html>", None))
        self.lineEdit_rendering_icon_heading.setText(_translate("MilkMachine", "0", None))
        self.label_23.setText(_translate("MilkMachine", "icon:", None))
        self.lineEdit_rendering_icon_icon.setToolTip(_translate("MilkMachine", "<html><head/><body><p>A custom Icon. For example;</p><p>Airport; http://maps.google.com/mapfiles/kml/shapes/airports.png</p></body></html>", None))
        self.label_24.setText(_translate("MilkMachine", "hotspot:", None))
        self.lineEdit_rendering_icon_hotspot.setToolTip(_translate("MilkMachine", "<html><head/><body><p><a name=\"hotspot\"/>&lt;hotSpot x=&quot;0.5&quot; y=&quot;0.5&quot; xunits=&quot;fraction&quot; yunits=&quot;fraction&quot;&gt; </p><p>Specifies the position within the Icon that is &quot;anchored&quot; to the &lt;Point&gt; specified in the Placemark. The <span style=\" font-style:italic;\">x</span> and <span style=\" font-style:italic;\">y</span> values can be specified in three different ways: as <span style=\" font-style:italic;\">pixels</span> (<span style=\" font-weight:600;\">&quot;pixels&quot;</span>), as <span style=\" font-style:italic;\">fractions</span> of the icon (<span style=\" font-weight:600;\">&quot;fraction&quot;</span><span style=\" font-style:italic;\">)</span>, or as <span style=\" font-style:italic;\">inset pixels </span>(<span style=\" font-weight:600;\">&quot;insetPixels&quot;</span>), which is an offset in pixels from the upper right corner of the icon. The <span style=\" font-style:italic;\">x</span> and <span style=\" font-style:italic;\">y</span> positions can be specified in different ways—for example, <span style=\" font-style:italic;\">x</span> can be in pixels and <span style=\" font-style:italic;\">y</span> can be a fraction. The origin of the coordinate system is in the lower left corner of the icon. </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">x </span>- Either the number of pixels, a fractional component of the icon, or a pixel inset indicating the <span style=\" font-style:italic;\">x</span> component of a point on the icon. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">y </span>- Either the number of pixels, a fractional component of the icon, or a pixel inset indicating the <span style=\" font-style:italic;\">y</span> component of a point on the icon. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">xunits </span>- Units in which the <span style=\" font-style:italic;\">x</span> value is specified. A value of <span style=\" font-weight:600;\">fraction</span> indicates the <span style=\" font-style:italic;\">x</span> value is a fraction of the icon. A value of <span style=\" font-weight:600;\">pixels</span> indicates the <span style=\" font-style:italic;\">x</span> value in pixels. A value of <span style=\" font-weight:600;\">insetPixels</span> indicates the indent from the right edge of the icon. </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:30px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">yunits</span> - Units in which the <span style=\" font-style:italic;\">y</span> value is specified. A value of <span style=\" font-weight:600;\">fraction</span> indicates the <span style=\" font-style:italic;\">y</span> value is a fraction of the icon. A value of <span style=\" font-weight:600;\">pixels</span> indicates the <span style=\" font-style:italic;\">y</span> value in pixels. A value of <span style=\" font-weight:600;\">insetPixels</span> indicates the indent from the top edge of the icon. </li></ul></body></html>", None))
        self.pushButton_rendering_icon_apply.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Apply the icon style changes to the selected points in the active layer. To roll back these edits, select &quot;Cancel for selected layer&quot; in the editor options.</p></body></html>", None))
        self.pushButton_rendering_icon_apply.setText(_translate("MilkMachine", "Apply", None))
        self.label_25.setText(_translate("MilkMachine", "transparency:", None))
        self.lineEdit_rendering_icon_transparency.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Transparency of the icon. (0 - 100) 0 is fully transparent, and 100 is opaque. This field will only be enabled when color is specified.</p></body></html>", None))
        self.lineEdit_rendering_icon_transparency.setText(_translate("MilkMachine", "100", None))
        self.comboBox_rendering_icon_color.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Choose a color from the dropdown list. Milk Machine will translate this into hexidecimal for kml.</p></body></html>", None))
        self.groupBox_5.setToolTip(_translate("MilkMachine", "<html><head/><body><p>A 3D object described in a COLLADA file (referenced in the <a href=\"https://developers.google.com/kml/documentation/kmlreference#link\"><span style=\" text-decoration: underline; color:#0000ff;\">&lt;Link&gt;</span></a> tag). COLLADA files have a <span style=\" font-style:italic;\">.dae</span> file extension. Models are created in their own coordinate space and then located, positioned, and scaled in Google Earth.</p><p>Google Earth supports the COLLADA common profile, with the following exceptions: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Google Earth supports only triangles and lines as primitive types. The maximum number of triangles allowed is 21845. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Google Earth does not support animation or skinning. </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Google Earth does not support external geometry references. </li></ul></body></html>", None))
        self.groupBox_5.setTitle(_translate("MilkMachine", "Point Model", None))
        self.lineEdit_rendering_model_link.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Path (or link) to the Collada .dae file.</p></body></html>", None))
        self.label_26.setText(_translate("MilkMachine", "link:", None))
        self.label_27.setText(_translate("MilkMachine", "longitude:", None))
        self.label_28.setText(_translate("MilkMachine", "latitude:", None))
        self.label_29.setText(_translate("MilkMachine", "altitude:", None))
        self.lineEdit_rendering_model_longitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Longitude (decimal degrees). Defaults to the longitude of the selected point if none is provided.</p></body></html>", None))
        self.lineEdit_rendering_model_latitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Latitude (decimal degrees). Defaults to the latitude of the selected point if none is provided.</p></body></html>", None))
        self.lineEdit_rendering_model_altitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Altitude (meters). Defaults to the altitude of the GPS, which is indicated by \'altitude\'. If no value is given it will default to ground level.</p></body></html>", None))
        self.lineEdit_rendering_model_altitude.setText(_translate("MilkMachine", "altitude", None))
        self.lineEdit_rendering_model_scale.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Scale of the point model. Defaults to 1 (regular size) is none is provided. If a value above 1 is provided it will enlarge the model by multiplying it by the scale value.</p></body></html>", None))
        self.lineEdit_rendering_model_scale.setText(_translate("MilkMachine", "1", None))
        self.label_30.setText(_translate("MilkMachine", "scale:", None))
        self.pushButton_rendering_model_apply.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Apply the model changes to the selected points. To roll back these edits, select &quot;Cancel for selected layer&quot; in the editor options.</p></body></html>", None))
        self.pushButton_rendering_model_apply.setText(_translate("MilkMachine", "Apply", None))
        self.pushButton_rendering_model_file.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Brows to .dae file.</p></body></html>", None))
        self.pushButton_rendering_model_xy.setToolTip(_translate("MilkMachine", "<html><head/><body><p>If one point is selected in the active layer, the &quot;x,y&quot; button will automatically fill the longitude and latitude location for the model using the coordinates from the selected point.</p></body></html>", None))
        self.pushButton_rendering_model_xy.setText(_translate("MilkMachine", "x,y", None))
        self.checkBox_rendering_model_z.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Checked (default) indicates that the selected points will have an altitute that matches the GPS value. Unchecked will enable the &quot;altitude&quot; entry box and the user can provide a value.</p></body></html>", None))
        self.checkBox_rendering_model_z.setText(_translate("MilkMachine", "z", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_rendering), _translate("MilkMachine", "Placemarks", None))
        self.label_visualization_active.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.lineEdit_visualization_active.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The selected layer in the table of contents.</p></body></html>", None))
        self.checkBox_visualization_edit.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Checking this box will enable the &quot;Camera&quot; fields for editing. The user must select a layer in the table of contents, have editing &quot;on&quot;, and have at least one selected point.</p></body></html>", None))
        self.checkBox_visualization_edit.setText(_translate("MilkMachine", "Edit Tour", None))
        self.groupBox_2.setTitle(_translate("MilkMachine", "KML Tour", None))
        self.groupBox_cameraview.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Introduced with KML 2.2, <span style=\" font-family:\'Courier New,courier\';\">&lt;Camera&gt;</span> provides an additional way to specify the observer\'s viewpoint and associated view parameters. <span style=\" font-family:\'Courier New,courier\';\">&lt;Camera&gt;</span> is similar to <span style=\" font-family:\'Courier New,courier\';\">&lt;LookAt&gt;</span>, since both elements define the placement and orientation of a virtual camera that is viewing the Earth. The difference is that LookAt specifies the view in terms of the point of interest that is being viewed. Camera, in contrast, specifies the view in terms of the viewer\'s position and orientation. </p></body></html>", None))
        self.groupBox_cameraview.setTitle(_translate("MilkMachine", "Camera", None))
        self.label_4.setText(_translate("MilkMachine", "altitude:", None))
        self.label_5.setText(_translate("MilkMachine", "altitudemode:", None))
        self.label_6.setText(_translate("MilkMachine", "gxaltitudemode:", None))
        self.label_7.setText(_translate("MilkMachine", "gxhorizfov:", None))
        self.label_8.setText(_translate("MilkMachine", "heading:", None))
        self.label_9.setText(_translate("MilkMachine", "roll:", None))
        self.label_10.setText(_translate("MilkMachine", "tilt:", None))
        self.lineEdit_visualization_camera_altitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Distance of the camera from the earth\'s surface, in meters. Interpreted according to the Camera\'s &lt;altitudeMode&gt; or &lt;gx:altitudeMode&gt;.</p></body></html>", None))
        self.lineEdit__visualization_camera_gxhoriz.setToolTip(_translate("MilkMachine", "Rotation about the x axis. <float>", None))
        self.lineEdit__visualization_camera_heading.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Direction (azimuth) of the camera, in degrees. Default=0 (true North). (<a href=\"https://developers.google.com/kml/documentation/kmlreference#headingdiagram\"><span style=\" text-decoration: underline; color:#0000ff;\">See diagram</span></a>.) Values range from 0 to 360 degrees. </p></body></html>", None))
        self.lineEdit__visualization_camera_heading.setText(_translate("MilkMachine", "0", None))
        self.lineEdit__visualization_camera_roll.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Rotation, in degrees, of the camera around the Z axis. Values range from −180 to +180 degrees. </p></body></html>", None))
        self.comboBox_altitudemode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Specifies how the &lt;altitude&gt; specified for the Camera is interpreted. Possible values are as follows: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">relativeToGround</span> - (default) Interprets the &lt;altitude&gt; as a value in meters above the ground. If the point is over water, the &lt;altitude&gt; will be interpreted as a value in meters above sea level. See <a href=\"https://developers.google.com/kml/documentation/kmlreference#gxaltitudemode\"><span style=\" text-decoration: underline; color:#0000ff;\">&lt;gx:altitudeMode&gt;</span></a> below to specify points relative to the sea floor. </li><li style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">clampToGround </span>- For a camera, this setting also places the camera <span style=\" font-weight:600;\">relativeToGround</span>, since putting the camera exactly at terrain height would mean that the eye would intersect the terrain (and the view would be blocked). </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">absolute </span>- Interprets the &lt;altitude&gt; as a value in meters above sea level. </li></ul></body></html>", None))
        self.comboBox_gxaltitudemode.setToolTip(_translate("MilkMachine", "<html><head/><body><p>A KML extension in the <a href=\"https://developers.google.com/kml/documentation/kmlreference#kmlextensions\"><span style=\" text-decoration: underline; color:#0000ff;\">Google extension namespace</span></a>, allowing altitudes relative to the sea floor. Values are: </p><ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">relativeToSeaFloor</span> - Interprets the &lt;altitude&gt; as a value in meters above the sea floor. If the point is above land rather than sea, the &lt;altitude&gt; will be interpreted as being above the ground. </li><li style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600;\">clampToSeaFloor</span> - The &lt;altitude&gt; specification is ignored, and the Camera will be positioned on the sea floor. If the point is on land rather than at sea, the Camera will be positioned on the ground. </li></ul><p><br/></p></body></html>", None))
        self.lineEdit__visualization_camera_tilt.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Rotation, in degrees, of the camera around the <span style=\" font-style:italic;\">X</span> axis. A value of 0 indicates that the view is aimed straight down toward the earth (the most common case). A value for 90 for &lt;tilt&gt; indicates that the view is aimed toward the horizon. Values greater than 90 indicate that the view is pointed up into the sky. Values for &lt;tilt&gt; are clamped at +180 degrees. </p></body></html>", None))
        self.label_11.setText(_translate("MilkMachine", "latitude:", None))
        self.label_12.setText(_translate("MilkMachine", "longitude:", None))
        self.lineEdit_visualization_camera_latitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Latitude of the virtual camera. Degrees north or south of the Equator (0 degrees). Values range from −90 degrees to 90 degrees.</p></body></html>", None))
        self.lineEdit_visualization_camera_longitude.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Longitude of the virtual camera (eye point). Angular distance in degrees, relative to the Prime Meridian. Values west of the Meridian range from −180 to 0 degrees. Values east of the Meridian range from 0 to 180 degrees.</p></body></html>", None))
        self.pushButton_visualization_camera_xy.setToolTip(_translate("MilkMachine", "<html><head/><body><p>If one point is selected in the active layer, the &quot;x,y&quot; button will automatically fill the longitude and latitude location for the model using the coordinates from the selected point.</p></body></html>", None))
        self.pushButton_visualization_camera_xy.setText(_translate("MilkMachine", "x,y", None))
        self.lineEdit_visualization_camera_longitude_off.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Longitude of the virtual camera (eye point). Angular distance in degrees, relative to the Prime Meridian. Values west of the Meridian range from −180 to 0 degrees. Values east of the Meridian range from 0 to 180 degrees.</p></body></html>", None))
        self.lineEdit_visualization_camera_latitude_off.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Latitude of the virtual camera. Degrees north or south of the Equator (0 degrees). Values range from −90 degrees to 90 degrees.</p></body></html>", None))
        self.label_31.setText(_translate("MilkMachine", "<html><head/><body><p>&plusmn;</p></body></html>", None))
        self.label_32.setText(_translate("MilkMachine", "<html><head/><body><p>&plusmn;</p></body></html>", None))
        self.groupBox.setTitle(_translate("MilkMachine", "FlyTo", None))
        self.label_14.setText(_translate("MilkMachine", "flyToMode:", None))
        self.label_15.setText(_translate("MilkMachine", "duration:", None))
        self.label_13.setText(_translate("MilkMachine", "Tour Name:", None))
        self.pushButton_camera_apply.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Apply the camera view changes to the selected points in the active layer. To roll back these edits, select &quot;Cancel for selected layer&quot; in the editor options.</p></body></html>", None))
        self.pushButton_camera_apply.setText(_translate("MilkMachine", "Apply", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_visualization), _translate("MilkMachine", "Tour", None))
        self.buttonExportTrack.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Export the selected track to .kml. If the active track is an ESRI shapefile point layer, the user will be able to export.</p></body></html>", None))
        self.buttonExportTrack.setText(_translate("MilkMachine", "Export Track", None))
        self.pushButton_TrackInfo.setToolTip(_translate("MilkMachine", "<html><head/><body><p>Click for information about the current audio track</p></body></html>", None))
        self.pushButton_google_earth.setToolTip(_translate("MilkMachine", "<html><head/><body><p>View selected track in Google Earth</p></body></html>", None))
        self.label_visualization_active_2.setText(_translate("MilkMachine", "<html><head/><body><p><span style=\" color:#000000;\">Active Track:</span></p></body></html>", None))
        self.lineEdit_export_active.setToolTip(_translate("MilkMachine", "<html><head/><body><p>The selected layer in the table of contents.</p></body></html>", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_export), _translate("MilkMachine", "Export and Details", None))
        self.chkActivate.setText(_translate("MilkMachine", "Activate\n"
"(check)", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MilkMachine", "Development", None))

import resources_rc
